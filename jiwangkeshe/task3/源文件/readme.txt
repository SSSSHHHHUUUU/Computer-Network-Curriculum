TCP socket programming
本文档提供了如何运行 TCP 客户端-服务器应用程序的说明，包括环境设置、配置选项和使用指南。

- 这个应用程序包括一个服务器和一个客户端，它们协同工作以反转文件的内容。
- 客户端读取一个文件，将其分割成随机大小的数据块，并将这些块发送到服务器。
- 服务器接着反转每个块并将它们发送回客户端，客户端再将反转后的块重新组装成一个新的文件。

环境设置：
1. PyCharm
2.解释器Python 3.12

服务器配置：
- SERVER_IP: 服务器的 IP 地址。本地测试时，您可以使用 '127.0.0.1'。
- SERVER_PORT: 服务器监听传入数据包的端口号。

运行服务器：
1. 将服务器代码保存到一个文件中，例如 'reversetcpserver.py'。
2. 从命令行运行服务器脚本：
   $ python reversetcpserverr.py
   $ python3 reversetcpserverr.py(如果在虚拟机则执行这一条)

运行客户端：
1. 将客户端代码保存到一个文件中，例如 'reversetcpclient.py'。
2. 从命令行运行客户端脚本，并提供服务器IP，端口，需要反转的文件的路径以及分割文件的最小和最大块大小作为参数：
   $ python reversetcpclient.py <server_ip> <server_port> <file_path> <Lmin> <Lmax>

协议：
应用程序使用一个简单的协议，包含以下数据包类型，
- Initialization：由客户端发送，通知服务器期望接收的数据块数量。
- Agree：由服务器发送，确认初始化并同意反转数据块。
- ReverseRequest：由客户端发送，包含要反转的数据块。
- ReverseAnswer：由服务器发送，包含反转后的数据块。
每个数据包包括一个带有数据包类型和数据长度的头部，后面跟着实际的数据（如果有的话）。

故障排除：
- 服务器和客户端都包括错误处理，以管理诸如连接错误、文件读取错误和数据包格式错误等问题。如果发生错误，将在控制台打印适当的消息，并尝试在退出前清理任何打开的资源。
