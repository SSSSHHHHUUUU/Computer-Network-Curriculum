UDP socket programming
本文档提供了如何运行 UDP 客户端-服务器应用程序的说明，包括环境设置、配置选项和使用指南。

环境设置：
1. PyCharm
2.解释器Python 3.12

服务器配置：
- SERVER_IP: 服务器的 IP 地址。本地测试时，您可以使用 '127.0.0.1'。
- SERVER_PORT: 服务器监听传入数据包的端口号。
- DROP_PACKET_RATE: 服务器模拟丢包的概率。
- REQUESTS_RECEIVED: 服务器在关闭连接之前将处理的数据包请求数量。

客户端配置：
- TIMEOUT: 等待服务器响应的超时时间（以秒为单位）。
- VERSION: 所使用协议的版本号。
- HEADER_SIZE: 数据包头的字节大小。
- DATA_SIZE: 数据包数据负载的字节大小。
- RETRIES: 如果没有收到响应，客户端将尝试重新发送数据包的次数。
- REQUESTS_SENT: 客户端将发送到服务器的请求数量。

运行服务器：
1. 将服务器代码保存到一个文件中，例如 'udpserver.py'。
2. 从命令行运行服务器脚本：
   $ python udpserver.py
   $ python3 udpserver.py(如果在虚拟机上)

运行客户端：
1. 将客户端代码保存到一个文件中，例如 'udpclient.py'。
2. 从命令行运行客户端脚本，并提供服务器 IP 和端口作为参数：
   $ python udpclient.py <服务器_ip> <服务器端口>

使用指南：
- 服务器将在指定的 IP 和端口上监听传入的 UDP 数据包。
- 客户端将向服务器发送一系列 UDP 数据包，并等待响应。
- 服务器可能会根据 PACKETSDROPED_RATE 模拟丢包，不响应某些数据包。
- 客户端将计算并显示 RTT（往返时间）、丢包率和服务器响应时间等统计信息。

故障排除：
- 如果客户端无法连接到服务器，请检查服务器 IP 和端口配置。
- 如果服务器没有响应，请确保服务器正在运行，并且没有网络防火墙阻止通信。
